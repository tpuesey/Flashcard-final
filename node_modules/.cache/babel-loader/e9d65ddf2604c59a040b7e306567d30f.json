{"ast":null,"code":"var _jsxFileName = \"/Users/timothypuesey/Desktop/Flashcard-App-Final/Flashcard-final/src/Layout/Deck/StudyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyCard(_ref) {\n  _s();\n\n  let {\n    cards\n  } = _ref;\n  const initialState = {\n    flipped: false,\n    currentCard: 0\n  };\n  const [session, setSession] = useState(initialState);\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams(); // loop through the cards prop and prompt after last card\n\n  const handleNext = () => {\n    if (session.currentCard < cards.length - 1) {\n      setSession({ ...session,\n        currentCard: session.currentCard + 1,\n        flipped: false\n      });\n    } else {\n      window.confirm('Restart cards? Click \"cancel\" to return to the home page.') ? setSession(initialState) : history.push(\"/\");\n    }\n  };\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Card \", session.currentCard + 1, \" of \", cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: session.flipped ? cards[session.currentCard].back : cards[session.currentCard].front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-2\",\n          onClick: () => setSession({ ...session,\n            flipped: true\n          }),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), session.flipped && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not enough cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study There are \", cards.length, \" cards in this deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(StudyCard, \"cjWrvsnwQQPJe1alkF1YCAAoJNQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = StudyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCard\");","map":{"version":3,"sources":["/Users/timothypuesey/Desktop/Flashcard-App-Final/Flashcard-final/src/Layout/Deck/StudyCard.js"],"names":["React","useState","useHistory","Link","useParams","StudyCard","cards","initialState","flipped","currentCard","session","setSession","history","deckId","handleNext","length","window","confirm","push","back","front"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,SAA3B,QAA4C,kBAA5C;;AAGA,eAAe,SAASC,SAAT,OAA8B;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC3C,QAAMC,YAAY,GAAG;AAAEC,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,WAAW,EAAE;AAA/B,GAArB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,YAAD,CAAtC;AACA,QAAMK,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaT,SAAS,EAA5B,CAJ2C,CAM3C;;AACA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAIJ,OAAO,CAACD,WAAR,GAAsBH,KAAK,CAACS,MAAN,GAAe,CAAzC,EAA4C;AAC1CJ,MAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETD,QAAAA,WAAW,EAAEC,OAAO,CAACD,WAAR,GAAsB,CAF1B;AAGTD,QAAAA,OAAO,EAAE;AAHA,OAAD,CAAV;AAKD,KAND,MAMO;AACLQ,MAAAA,MAAM,CAACC,OAAP,CACE,2DADF,IAGIN,UAAU,CAACJ,YAAD,CAHd,GAIIK,OAAO,CAACM,IAAR,CAAa,GAAb,CAJJ;AAKD;AACF,GAdD;;AAgBA,MAAIZ,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AACpB,wBAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,8BACQL,OAAO,CAACD,WAAR,GAAsB,CAD9B,UACqCH,KAAK,CAACS,MAD3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBACGL,OAAO,CAACF,OAAR,GACGF,KAAK,CAACI,OAAO,CAACD,WAAT,CAAL,CAA2BU,IAD9B,GAEGb,KAAK,CAACI,OAAO,CAACD,WAAT,CAAL,CAA2BW;AAHjC;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,OAAO,EAAE,MAAMT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcF,YAAAA,OAAO,EAAE;AAAvB,WAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,EAeGE,OAAO,CAACF,OAAR,iBACC;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEM,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AA2BD,GA5BD,MA4BO;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oEACgDR,KAAK,CAACS,MADtD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASF,MAAO,YAA3B;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;AACF;;GAnEuBR,S;UAGNH,U,EACGE,S;;;KAJGC,S","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\n\n\nexport default function StudyCard({ cards }) {\n  const initialState = { flipped: false, currentCard: 0 };\n  const [session, setSession] = useState(initialState);\n  const history = useHistory();\n  const { deckId } = useParams();\n\n  // loop through the cards prop and prompt after last card\n  const handleNext = () => {\n    if (session.currentCard < cards.length - 1) {\n      setSession({\n        ...session,\n        currentCard: session.currentCard + 1,\n        flipped: false,\n      });\n    } else {\n      window.confirm(\n        'Restart cards? Click \"cancel\" to return to the home page.'\n      )\n        ? setSession(initialState)\n        : history.push(\"/\");\n    }\n  };\n\n  if (cards.length > 2) {\n    return (\n      \n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              Card {session.currentCard + 1} of {cards.length}\n            </h5>\n            <p className=\"card-text\">\n              {session.flipped\n                ? cards[session.currentCard].back\n                : cards[session.currentCard].front}\n            </p>\n            <button\n              className=\"btn btn-secondary mr-2\"\n              onClick={() => setSession({ ...session, flipped: true })}\n            >\n              Flip\n            </button>\n            {session.flipped && (\n              <button className=\"btn btn-primary\" onClick={handleNext}>\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n      \n    );\n  } else {\n    return (\n      <div>\n        <h2>Not enough cards</h2>\n        <p>\n          You need at least 3 cards to study There are {cards.length} cards in\n          this deck\n        </p>\n        <Link to={`/decks/${deckId}/cards/new`}>\n          <button className=\"btn btn-primary\">\n            Add Cards\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}