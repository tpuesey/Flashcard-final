{"ast":null,"code":"var _jsxFileName = \"/Users/timothypuesey/Desktop/Flashcard-App-Final/Flashcard-final/src/Layout/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks } from \"../../utils/api/index\";\nimport RenderDecks from \"./RenderDecks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n\n  let {\n    numOfDecks,\n    updateDecks\n  } = _ref;\n  //load all decks from API into decks state\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDecks = async () => {\n      const deck = await listDecks(abortController.signal);\n      setDecks(deck);\n    };\n\n    loadDecks();\n    return () => abortController.abort();\n  }, [numOfDecks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/decks/new\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary m-3\",\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), decks.map(_ref2 => {\n      let {\n        id,\n        name,\n        description,\n        cards\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(RenderDecks, {\n        id: id,\n        description: description,\n        cards: cards,\n        name: name,\n        updateDecks: updateDecks\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"kqAf2cEOjcsAonSI3guqjMNDU8E=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/timothypuesey/Desktop/Flashcard-App-Final/Flashcard-final/src/Layout/Home/Home.js"],"names":["React","useState","useEffect","Link","listDecks","RenderDecks","Home","numOfDecks","updateDecks","decks","setDecks","abortController","AbortController","loadDecks","deck","signal","abort","map","id","name","description","cards"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,IAAT,OAAuC;AAAA;;AAAA,MAAzB;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,GAAyB;AAElD;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC9B,YAAMC,IAAI,GAAG,MAAMV,SAAS,CAACO,eAAe,CAACI,MAAjB,CAA5B;AACAL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAHC;;AAIFD,IAAAA,SAAS;AACT,WAAO,MAAMF,eAAe,CAACK,KAAhB,EAAb;AACC,GARQ,EAQP,CAACT,UAAD,CARO,CAAT;AAUD,sBACC;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,4BACQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA,6BACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADR,EAISE,KAAK,CAACQ,GAAN,CAAU;AAAA,UAAC;AAACC,QAAAA,EAAD;AAAIC,QAAAA,IAAJ;AAASC,QAAAA,WAAT;AAAqBC,QAAAA;AAArB,OAAD;AAAA,0BACX,QAAC,WAAD;AAAsB,QAAA,EAAE,EAAEH,EAA1B;AAA8B,QAAA,WAAW,EAAEE,WAA3C;AAAwD,QAAA,KAAK,EAAEC,KAA/D;AAAsE,QAAA,IAAI,EAAEF,IAA5E;AAAkF,QAAA,WAAW,EAAEX;AAA/F,SAAkBU,EAAlB;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAV,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUF;;GAzBuBZ,I;;KAAAA,I","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {listDecks} from \"../../utils/api/index\";\nimport RenderDecks from \"./RenderDecks\";\n\nexport default function Home({numOfDecks,updateDecks}){\n\n    //load all decks from API into decks state\n    const [decks,setDecks] = useState([]);\n\n    useEffect(()=>{\n      const abortController = new AbortController();\n      const loadDecks = async () => {\n      const deck = await listDecks(abortController.signal)\n      setDecks(deck);\n    };\n    loadDecks();\n    return () => abortController.abort();\n    },[numOfDecks]);\n\n   return(\n    <div className={\"container\"}>\n            <Link to=\"/decks/new\">\n            <button type=\"button\" className=\"btn btn-secondary m-3\">Create Deck</button>\n            </Link>\n            {decks.map(({id,name,description,cards})=>(\n            <RenderDecks key={id} id={id} description={description} cards={cards} name={name} updateDecks={updateDecks}/>\n            ))}\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}